
def init_random_data():
    from random import randint, choice

    from wsgi.sql_app.databse import Base, LocalSession, engine
    from wsgi.sql_app.models import Product, Location, Inventory

    locations = ['Москва', 'Санкт-Петербург', 'Самара', 'Оренбург', 'Казань', 'Новосибирск', 'Ижевск', 'Смоленск']
    products = [
        (
            'Штукатурка гипсовая',
            'Для выравнивания стен и потолков перед финишным шпаклеванием, облицовкой керамической плиткой.'
            ' Применяется внутри помещений с нормальной влажностью и температурой от +5 до +30ºС. Для ручного нанесения',
            100
        ),
        (
            'Душевая кабина',
            'Душевая кабина Villagio компактная и невероятно комфортная. '
            'Это отличный вариант для ванных комнат с небольшим метражом или для людей, которые ценят свое время.'
            ' Душевые кабины позволяют экономить значительные суммы на оплате коммунальных счетов благодаря небольшому '
            'потреблению воды, а футуристичный дизайн способен органично вписаться в любой дизайн интерьера.',
            200,
        ),
        (
            'Люстра потолочная',
            '1) материал элементов конструкции: железо2) покрытие: гальваника хром'
            '3) материал декоративных элементов: дерево (матовый черный)4) плафон: стекло (молочный белый)'
            '5) качество обработки: высший сорт',
            130,
        ),
        (
            'Сифон для мойки',
            'Сифон GRAND-ECO устанавливается на одинарные кухонные мойки. Идеально подходит для моек GRANFEST. '
            'Сифон оснащен выходом под выпуск и круглым переливом. '
            'Изделие не предназначено для работы под давлением, в связи с этим максимальное давление, которое может быть '
            'выдержано - 0,3 атмосферы (0,03 МПа). Изделие выполнено из качественного пластика (полипропилен), что '
            'обеспечивает долгий срок службы.',
            50,
        ),
        (
            'Клей-пена',
            'Однокомпонентная полиуретановая клей-пена с быстрым первичным схватыванием характеризуется высокой начальной'
            ' адгезией, низким расширением, не деформирует склеиваемые элементы. Идеально подходит для сборки деревянных'
            ' конструкций, возведения ненесущих перегородок из газобетона, гипсовых пазогребневых плит и ячеистых блоков. '
            'Не подходит для приклеивания зеркал, изделий из полиэтилена, полипропилена, тефлона, силикона.'
            'Рекомендуется для приклеивания гипсокартона, OSB-плит, черепицы, плинтусов, декоративных элементов, '
            'подоконников, изоляции и утеплителей различных видов на бетонные, кирпичные, каменные, металлические, '
            'оштукатуренные, битумные и деревянные поверхности. Предназначена для наружных и внутренних работ.',
            35,
        ),
        (
            'Слив унитаза',
            'Удлинитель для унитаза армированный выполняет функцию фановых труб для соединения унитаза с'
            ' канализационной системой. Гофра отличается удобством при монтаже - при соединении унитаза с '
            'канализацией нет необходимости заранее замерять угол установки, как в случае с фановыми трубами, '
            'гибкий удлинитель позволяет произвести монтаж практически под любым углом от 1 до 90 градусов.',
            57,
        ),
        (
            'Керамический гранит',
            'Керамический гранит российского производства представлен в приятных светло-серых тонах.'
            'Дизайн светло-серого камня является одним из самых популярных в интерьерах различного назначения,'
            'так как от отлично подходит к многими используемыми отделочным материалам и предметам мебели и декора.',
            80,
        ),
    ]

    Base.metadata.drop_all(engine)
    Base.metadata.create_all(engine)

    locations_in_db = [Location(name=location_name) for location_name in locations]
    products_in_db = [Product(name=p[0], description=p[1], price=p[2]) for p in products]
    inventories_db = [
        Inventory(quantity=randint(1, 20), product=choice(products_in_db), location=choice(locations_in_db))
        for _ in range(1000)
    ]

    with LocalSession.begin() as session:
        session.add_all(locations_in_db + products_in_db + inventories_db)


if __name__ == '__main__':
    init_random_data()
